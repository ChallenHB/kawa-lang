@private @abstract
def doStuff = (): void

@public @async
def syncStuff = (): String { }

@async
def returnStuff = (): Byte[] { }

@static @synchronized
def getStuff = (value: Integer?, name = "name", money = 2.2 as BigDecimal): int { }

def calculate = (value: int): void {
	//
}

@abstract
def abstractMethod = (value: int): String

def method = (value: Map = HashMap.new() as TreeSet): String {
	//
}

def genericMethod<T extends Double> = (T type): void {}
// def <T extends Double> genericMethod = (T type): void {}