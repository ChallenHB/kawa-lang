// all loops support break and continue keywords

val start = LocalDate.now()
val end = LocalDate.now().plusDays(10)

for (start to end step 1 as ChronoUnit.Days) {
	// it is the implicit loop variable
	print it
}


val steps = 1.days
for (value in [start..end] step steps]) {
	
}

val values = ["Peter", "Pan", "Lassy"]
for (value in values) {
	print "${it.count} ${value}"
}

// prints 1, 3, 5, ...
from (1 to 10 step 2) {
	// it is the implicit loop variable
	print it
}

loop (x = 0; x < 10; x++) {
	continue
}

while (var stop == false) {
	print "Running"
	stop = true
}


